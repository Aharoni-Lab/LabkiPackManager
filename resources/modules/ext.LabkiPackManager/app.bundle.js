var Vue="undefined"!=typeof mw&&mw.loader&&mw.loader.require?mw.loader.require("vue"):window.Vue,Codex="undefined"!=typeof mw&&mw.loader&&mw.loader.require?mw.loader.require("@wikimedia/codex"):window.Codex,LabkiPackManager=function(e,t,a){"use strict";function o(e){var t=Object.create(null);return e&&Object.keys(e).forEach(function(a){if("default"!==a){var o=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,o.get?o:{enumerable:!0,get:function(){return e[a]}})}}),t.default=e,Object.freeze(t)}var r=o(t),s=o(a);async function n(e,t=!1){const a=mw.util.wikiScript("api"),o=new URLSearchParams({action:"labkiManifest",format:"json",formatversion:"2",repo:e});t&&o.set("refresh","1");const r=`${a}?${o.toString()}`;let s,n;try{s=await fetch(r,{credentials:"same-origin"})}catch(t){throw new Error(`Network error fetching manifest for ${e}: ${t}`)}if(!s.ok)throw new Error(`HTTP ${s.status} fetching manifest for ${e}`);try{n=await s.json()}catch(t){throw new Error(`Invalid JSON from ${e}: ${t}`)}return n.labkiManifest||n}async function i(){const e=function(){if("undefined"==typeof mw||!mw.config)return[];const e=mw.config.get("LabkiContentSources")||mw.config.get("wgLabkiContentSources");return Array.isArray(e)?e:[]}();if(0===e.length)return console.warn("[LabkiPackManager] No LabkiContentSources defined."),[];const t=await Promise.allSettled(e.map(e=>n(e,!1)));return e.map((e,a)=>{const o=t[a];if("fulfilled"===o.status&&o.value){const t=o.value,a=t?._meta?.repoName||t?.manifest?.name||e.split("/").slice(-2).join("/");return{url:e,name:a,data:t}}return console.warn(`[LabkiPackManager] Repo ${e} failed:`,o.reason),{url:e,name:`${e} (unavailable)`}})}const l=Object.freeze({SUCCESS:"success",ERROR:"error",INFO:"info",WARNING:"warning"});var c={name:"LpmToolbar",props:{repoMenuItems:{type:Array,required:!0,validator:e=>Array.isArray(e)&&e.every(e=>e.label&&e.value)},activeRepo:{type:String,default:null},isLoadingRepo:{type:Boolean,default:!1},isRefreshing:{type:Boolean,default:!1},hasActiveRepo:{type:Boolean,required:!0}},emits:["update:activeRepo","load","refresh"]};const p={class:"lpm-row lpm-row-toolbar",role:"toolbar","aria-label":"Repository controls"},d={key:0,"aria-busy":"true","aria-live":"polite"},m={key:0,"aria-busy":"true","aria-live":"polite"};c.render=function(e,a,o,r,s,n){const i=t.resolveComponent("cdx-select"),l=t.resolveComponent("cdx-button");return t.openBlock(),t.createElementBlock("div",p,[t.createCommentVNode(" Repository selector "),t.createVNode(i,{id:"lpm-repo-select","aria-label":"Repository selector","menu-items":o.repoMenuItems,selected:o.activeRepo,disabled:o.isLoadingRepo,placeholder:"Select a content repository…","onUpdate:selected":a[0]||(a[0]=t=>e.$emit("update:activeRepo",t)),class:"lpm-toolbar-select"},null,8,["menu-items","selected","disabled"]),t.createCommentVNode(" Load button "),t.createVNode(l,{appearance:"primary",disabled:o.isLoadingRepo||!o.hasActiveRepo,onClick:a[1]||(a[1]=t=>e.$emit("load")),class:"lpm-toolbar-btn"},{default:t.withCtx(()=>[o.isLoadingRepo?(t.openBlock(),t.createElementBlock("span",d,"Loading…")):(t.openBlock(),t.createElementBlock(t.Fragment,{key:1},[t.createTextVNode("Load")],64))]),_:1},8,["disabled"]),t.createCommentVNode(" Refresh button "),t.createVNode(l,{appearance:"quiet",disabled:o.isRefreshing||!o.hasActiveRepo,onClick:a[2]||(a[2]=t=>e.$emit("refresh")),class:"lpm-toolbar-btn"},{default:t.withCtx(()=>[o.isRefreshing?(t.openBlock(),t.createElementBlock("span",m,"Refreshing…")):(t.openBlock(),t.createElementBlock(t.Fragment,{key:1},[t.createTextVNode("Refresh")],64))]),_:1},8,["disabled"])])},c.__scopeId="data-v-56b90443",c.__file="resources/src/ui/toolbar.vue";var u={name:"LpmTree",props:{data:{type:Object,default:null},selectedPacks:{type:Object,required:!0},selectedPages:{type:Object,required:!0},prefixes:{type:Object,required:!0},renames:{type:Object,required:!0}},emits:["update:selectedPacks","update:selectedPages","update:prefixes","update:renames"],computed:{hasData(){return this.data?.hierarchy?.packs&&Array.isArray(this.data.hierarchy.packs)&&this.data.hierarchy.packs.length>0}},methods:{pageKey:(e,t)=>`${e.name}::${t.name}`,finalName(e,t){const a=this.pageKey(e,t),o=this.renames[a];return o?.trim()||t.name},updateSelectedPack(e,t){this.$emit("update:selectedPacks",{...this.selectedPacks,[e]:t})},updatePrefix(e,t){this.$emit("update:prefixes",{...this.prefixes,[e]:t})},updateSelectedPage(e,t,a){const o=this.pageKey(e,t);this.$emit("update:selectedPages",{...this.selectedPages,[o]:a})},updateRename(e,t,a){const o=this.pageKey(e,t);this.$emit("update:renames",{...this.renames,[o]:a})}}};const h={class:"lpm-row lpm-row-tree"},f={class:"lpm-tree",role:"region","aria-label":"Pack and page selection tree"},g={class:"lpm-tree-table"},k={key:0,id:"lpm-tree-body"},y={class:"pack-row"},v={class:"lpm-cell-pad-left"};u.render=function(e,a,o,r,s,n){const i=t.resolveComponent("cdx-checkbox"),l=t.resolveComponent("cdx-text-input");return t.openBlock(),t.createElementBlock("div",h,[t.createElementVNode("div",f,[t.createElementVNode("table",g,[a[2]||(a[2]=t.createElementVNode("thead",null,[t.createElementVNode("tr",null,[t.createElementVNode("th",{scope:"col"},"Name"),t.createElementVNode("th",{scope:"col"},"Select"),t.createElementVNode("th",{scope:"col"},"Prefix / Rename"),t.createElementVNode("th",{scope:"col"},"Final Name")])],-1)),t.createCommentVNode(" Main pack/page listing "),n.hasData?(t.openBlock(),t.createElementBlock("tbody",k,[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(o.data.hierarchy.packs,e=>(t.openBlock(),t.createElementBlock(t.Fragment,{key:e.name},[t.createCommentVNode(" Pack row "),t.createElementVNode("tr",y,[t.createElementVNode("td",null,[t.createElementVNode("strong",null,t.toDisplayString(e.name),1)]),t.createElementVNode("td",null,[t.createVNode(i,{"model-value":o.selectedPacks[e.name],"aria-label":`Select pack ${e.name}`,"onUpdate:modelValue":t=>n.updateSelectedPack(e.name,t)},null,8,["model-value","aria-label","onUpdate:modelValue"])]),t.createElementVNode("td",null,[t.createVNode(l,{"model-value":o.prefixes[e.name],placeholder:"prefix","aria-label":"Prefix","onUpdate:modelValue":t=>n.updatePrefix(e.name,t)},null,8,["model-value","onUpdate:modelValue"])]),a[0]||(a[0]=t.createElementVNode("td",null,null,-1))]),t.createCommentVNode(" Page rows "),(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.pages||[],a=>(t.openBlock(),t.createElementBlock("tr",{key:n.pageKey(e,a),class:"page-row"},[t.createElementVNode("td",v,t.toDisplayString(a.name),1),t.createElementVNode("td",null,[t.createVNode(i,{"model-value":o.selectedPages[n.pageKey(e,a)],"aria-label":`Select page ${a.name}`,"onUpdate:modelValue":t=>n.updateSelectedPage(e,a,t)},null,8,["model-value","aria-label","onUpdate:modelValue"])]),t.createElementVNode("td",null,[t.createVNode(l,{"model-value":o.renames[n.pageKey(e,a)],placeholder:"rename","aria-label":"Rename page","onUpdate:modelValue":t=>n.updateRename(e,a,t)},null,8,["model-value","onUpdate:modelValue"])]),t.createElementVNode("td",null,t.toDisplayString(n.finalName(e,a)),1)]))),128))],64))),128))])):(t.openBlock(),t.createElementBlock(t.Fragment,{key:1},[t.createCommentVNode(" Fallback when no data "),a[1]||(a[1]=t.createElementVNode("tbody",null,[t.createElementVNode("tr",null,[t.createElementVNode("td",{colspan:"4"},[t.createElementVNode("em",null,"No data loaded.")])])],-1))],2112))])])])},u.__scopeId="data-v-4b584986",u.__file="resources/src/ui/tree.vue";var w={name:"LpmMessages",props:{messages:{type:Array,required:!0,validator:e=>e.every(e=>"number"==typeof e.id&&"string"==typeof e.type&&"string"==typeof e.text)}},emits:["dismiss"]};const C={key:0,class:"lpm-row lpm-row-messages"},b={class:"lpm-messages",role:"region","aria-label":"System messages"};w.render=function(e,a,o,r,s,n){const i=t.resolveComponent("cdx-message");return t.openBlock(),t.createElementBlock(t.Fragment,null,[t.createCommentVNode(" Render message stack only if there are messages "),o.messages?.length?(t.openBlock(),t.createElementBlock("div",C,[t.createElementVNode("div",b,[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(o.messages,a=>(t.openBlock(),t.createBlock(i,{key:a.id,type:a.type,dismissible:"",class:"lpm-message-item",onDismiss:t=>e.$emit("dismiss",a.id)},{default:t.withCtx(()=>[t.createTextVNode(t.toDisplayString(a.text),1)]),_:2},1032,["type","onDismiss"]))),128))])])):t.createCommentVNode("v-if",!0)],2112)},w.__scopeId="data-v-1ba2a834",w.__file="resources/src/ui/messages.vue";var N={name:"LpmDialogs",props:{showImportConfirm:{type:Boolean,required:!0},showUpdateConfirm:{type:Boolean,required:!0},importTitle:{type:String,default:"Confirm Import"},updateTitle:{type:String,default:"Confirm Update"},importMessage:{type:String,default:"Import selected packs and pages?"},updateMessage:{type:String,default:"Update existing pages from the selected repository?"}},emits:["confirm-import","close-import","confirm-update","close-update","update:showImportConfirm","update:showUpdateConfirm"],data(){return{localImportOpen:this.showImportConfirm,localUpdateOpen:this.showUpdateConfirm}},watch:{showImportConfirm(e){this.localImportOpen=e},showUpdateConfirm(e){this.localUpdateOpen=e},localImportOpen(e){this.$emit("update:showImportConfirm",e)},localUpdateOpen(e){this.$emit("update:showUpdateConfirm",e)}},methods:{confirmImport(){this.$emit("confirm-import"),this.$emit("update:showImportConfirm",!1)},closeImport(){this.$emit("close-import"),this.$emit("update:showImportConfirm",!1)},confirmUpdate(){this.$emit("confirm-update"),this.$emit("update:showUpdateConfirm",!1)},closeUpdate(){this.$emit("close-update"),this.$emit("update:showUpdateConfirm",!1)}}};const $={class:"lpm-dialogs"};function R(e){try{return JSON.stringify(e,null,2)}catch{return String(e)}}function V(e="#labki-pack-manager-root"){const t=r.createApp({template:"<lpm-root />",data:()=>({data:null,activeRepo:null,repos:[],isLoadingRepo:!1,isRefreshing:!1,repoMenuItems:[],messages:[],nextMsgId:1,showImportConfirm:!1,showUpdateConfirm:!1,selectedPacks:{},selectedPages:{},prefixes:{},renames:{}}),computed:{hasActiveRepo(){return!!this.activeRepo}},methods:{pretty:R,async initRepos(){try{const e=await i();this.repos=e,this.repoMenuItems=e.map(e=>({label:e.name||e.url,value:e.url}))}catch(e){console.error("[LabkiPackManager] Failed to initialize repos:",e),this.pushMessage(l.ERROR,"Failed to load repositories.")}},async loadRepo(){if(!this.activeRepo)return;this.isLoadingRepo=!0;const e=this.repos.find(e=>e.url===this.activeRepo);try{let t=e?.data;t||(this.pushMessage(l.INFO,`Loading manifest for ${this.activeRepo}...`),t=await n(this.activeRepo,!1)),this.data=t&&t.manifest?t.manifest:t,e&&(e.data=t),this.pushMessage(l.SUCCESS,mw.msg("labkipackmanager-load-success")||"Manifest loaded.")}catch(e){const t=`Failed to load ${this.activeRepo}: ${e?.message||e}`;this.pushMessage(l.ERROR,t.trim())}finally{this.isLoadingRepo=!1}},async refresh(){if(this.activeRepo){this.isRefreshing=!0,this.pushMessage(l.INFO,`Refreshing manifest for ${this.activeRepo}...`);try{const e=await n(this.activeRepo,!0);this.data=e&&e.manifest?e.manifest:e;const t=this.repos.find(e=>e.url===this.activeRepo);t&&(t.data=e),this.pushMessage(l.SUCCESS,mw.msg("labkipackmanager-refresh-success")||"Manifest refreshed.")}catch(e){const t=`Failed to refresh ${this.activeRepo}: ${e?.message||e}`;this.pushMessage(l.ERROR,t.trim())}finally{this.isRefreshing=!1}}else this.pushMessage(l.WARNING,"Select a repository first.")},pageKey:(e,t)=>`${e.name}::${t.name}`,finalName(e,t){const a=this.pageKey(e,t),o=this.renames[a];return o?.trim()||t.name},pushMessage(e,t,a=5e3){const o=this.nextMsgId++;this.messages.push({id:o,type:e,text:t}),a&&setTimeout(()=>this.dismissMessage(o),a)},dismissMessage(e){this.messages=this.messages.filter(t=>t.id!==e)},confirmImport(){this.showImportConfirm=!0},confirmUpdate(){this.showUpdateConfirm=!0},doImport(){this.showImportConfirm=!1,this.pushMessage(l.SUCCESS,"Import triggered.")},doUpdate(){this.showUpdateConfirm=!1,this.pushMessage(l.SUCCESS,"Update triggered.")}},async mounted(){await this.initRepos()}});function a(e){return e.replace(/^Cdx/,"Cdx-").replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}for(const[e,o]of Object.entries(s))e&&e.startsWith("Cdx")&&o&&t.component(a(e),o);t.component("lpm-root",{components:{LpmToolbar:c,LpmTree:u,LpmMessages:w,LpmDialogs:N},template:'\n      <div class="lpm-root">\n        <lpm-toolbar\n          :repo-menu-items="$root.repoMenuItems"\n          :active-repo="$root.activeRepo"\n          :is-loading-repo="$root.isLoadingRepo"\n          :is-refreshing="$root.isRefreshing"\n          :has-active-repo="$root.hasActiveRepo"\n          @update:activeRepo="val => $root.activeRepo = val"\n          @load="$root.loadRepo"\n          @refresh="$root.refresh"\n        />\n\n        <div class="lpm-row lpm-row-graph">\n          <div id="lpm-graph" class="lpm-graph">\n            <pre v-if="$root.data?.graph">{{ $root.pretty($root.data.graph) }}</pre>\n            <p v-else>Graph visualization will appear here.</p>\n          </div>\n        </div>\n\n        <lpm-tree\n          :data="$root.data"\n          :selected-packs="$root.selectedPacks"\n          :selected-pages="$root.selectedPages"\n          :prefixes="$root.prefixes"\n          :renames="$root.renames"\n          @update:selectedPacks="val => $root.selectedPacks = val"\n          @update:selectedPages="val => $root.selectedPages = val"\n          @update:prefixes="val => $root.prefixes = val"\n          @update:renames="val => $root.renames = val"\n        />\n\n        <div class="lpm-row lpm-row-actionbar">\n          <div class="lpm-actionbar">\n            <cdx-button @click="$root.confirmImport">Import Selected</cdx-button>\n            <cdx-button @click="$root.confirmUpdate">Update Existing</cdx-button>\n            <span class="lpm-action-info" style="margin-left: 1em;">\n              {{ $root.activeRepo\n                ? (\'Active repo: \' + $root.activeRepo)\n                : \'No repository selected.\' }}\n            </span>\n          </div>\n        </div>\n\n        <lpm-messages\n          :messages="$root.messages"\n          @dismiss="$root.dismissMessage"\n        />\n\n        <lpm-dialogs\n          :show-import-confirm="$root.showImportConfirm"\n          :show-update-confirm="$root.showUpdateConfirm"\n          @confirm-import="$root.doImport"\n          @close-import="() => $root.showImportConfirm = false"\n          @confirm-update="$root.doUpdate"\n          @close-update="() => $root.showUpdateConfirm = false"\n        />\n      </div>\n    '});document.querySelector(e)?t.mount(e):console.error(`[LabkiPackManager] Root element not found: ${e}`)}return N.render=function(e,a,o,r,s,n){const i=t.resolveComponent("cdx-button"),l=t.resolveComponent("cdx-dialog");return t.openBlock(),t.createElementBlock("div",$,[t.createCommentVNode(" Import confirmation dialog "),t.createVNode(l,{open:s.localImportOpen,"onUpdate:open":a[0]||(a[0]=e=>s.localImportOpen=e),title:o.importTitle},{footer:t.withCtx(()=>[t.createVNode(i,{appearance:"primary",onClick:n.confirmImport},{default:t.withCtx(()=>[...a[2]||(a[2]=[t.createTextVNode(" Confirm ",-1)])]),_:1},8,["onClick"]),t.createVNode(i,{appearance:"quiet",onClick:n.closeImport},{default:t.withCtx(()=>[...a[3]||(a[3]=[t.createTextVNode(" Cancel ",-1)])]),_:1},8,["onClick"])]),default:t.withCtx(()=>[t.createElementVNode("p",null,t.toDisplayString(o.importMessage),1)]),_:1},8,["open","title"]),t.createCommentVNode(" Update confirmation dialog "),t.createVNode(l,{open:s.localUpdateOpen,"onUpdate:open":a[1]||(a[1]=e=>s.localUpdateOpen=e),title:o.updateTitle},{footer:t.withCtx(()=>[t.createVNode(i,{appearance:"primary",onClick:n.confirmUpdate},{default:t.withCtx(()=>[...a[4]||(a[4]=[t.createTextVNode(" Confirm ",-1)])]),_:1},8,["onClick"]),t.createVNode(i,{appearance:"quiet",onClick:n.closeUpdate},{default:t.withCtx(()=>[...a[5]||(a[5]=[t.createTextVNode(" Cancel ",-1)])]),_:1},8,["onClick"])]),default:t.withCtx(()=>[t.createElementVNode("p",null,t.toDisplayString(o.updateMessage),1)]),_:1},8,["open","title"])])},N.__scopeId="data-v-2619661a",N.__file="resources/src/ui/dialogs.vue","loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>V()):V(),e.mountApp=V,e}({},Vue,Codex);
//# sourceMappingURL=app.bundle.js.map
